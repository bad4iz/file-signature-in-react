import { describe, expect, it } from 'vitest';

import { checkQuotes } from './checkQuotes';

describe('checkQuotes', () => {
  it('–¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ true –¥–ª—è –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏', () => {
    expect.hasAssertions();

    // üî• Act
    const res = checkQuotes('');

    // ‚ùì Assert
    expect(res).toBe(true);
  });

  it('–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ true –¥–ª—è —Å—Ç—Ä–æ–∫–∏ —Å —á–µ—Ç–Ω—ã–º —á–∏—Å–ª–æ–º –∫–∞–≤—ã—á–µ–∫', () => {
    expect.hasAssertions();

    // ‚ùì Assert
    expect(checkQuotes('""')).toBe(true);
    expect(checkQuotes('"Hello"')).toBe(true);
    expect(checkQuotes('"a "b" c"')).toBe(true);
    expect(checkQuotes('This is a "test" string.')).toBe(true);
  });

  it('–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ false –¥–ª—è —Å—Ç—Ä–æ–∫–∏ —Å –Ω–µ—á–µ—Ç–Ω—ã–º —á–∏—Å–ª–æ–º –∫–∞–≤—ã—á–µ–∫', () => {
    expect.hasAssertions();

    // ‚ùì Assert
    expect(checkQuotes('"')).toBe(false);
    expect(checkQuotes('"""')).toBe(false);
    expect(checkQuotes('"Hello world')).toBe(false);
    expect(checkQuotes('This is an "odd string.')).toBe(false);
  });
});
